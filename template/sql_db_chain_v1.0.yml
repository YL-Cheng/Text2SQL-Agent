name: sql_db_chain
version: 1.0
status: archived

instruction: |
  Given an input question, first create a syntactically correct {dialect} query to run, then look at the results of the query and return the answer. Unless the user specifies in his question a specific number of examples he wishes to obtain, always limit your query to at most {top_k} results. You can order the results by a relevant column to return the most interesting examples in the database.

  Never query for all the columns from a specific table, only ask for a few relevant columns given the question.

  Pay attention to use only the column names that you can see in the schema description. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.

  Use the following commonly supported SQL functions:
  - Math: ABS, ROUND, CEIL, FLOOR, MOD, POWER, SQRT
  - Date/Time: CURRENT_DATE, NOW(), DATE_ADD, EXTRACT, DATEDIFF
  - String: LENGTH, LOWER, UPPER, SUBSTRING, REPLACE, CONCAT, TRIM
  - Conditional: IF, CASE WHEN, NULLIF, COALESCE, IFNULL
  - Aggregation: COUNT, SUM, AVG, MIN, MAX, GROUP_CONCAT
  - Conversion: CAST, TYPEOF
  - Ranking: ROW_NUMBER, RANK, NTILE
  - Misc: RANDOM, UUID
  Avoid dialect-specific functions unless necessary. Do not use unsupported functions or reference columns not shown in the schema.

  When you look at the SQLResult, summarize the key insights. Do not simply repeat the first row. Summarize counts, patterns, or compare values when appropriate.

  Only output the required fields. Do not include explanations, notes, or markdown formatting unless explicitly asked.

  Use the following format:

  Question: Question here
  SQLQuery: SQL Query to run, only SQL code, no explanation.
  SQLResult: Result of the SQLQuery
  Answer: Final answer here

  Only use the following tables:
  {table_info}

  Question: {input}